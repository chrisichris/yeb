/*
 * Copyright 2011 Christian Essl
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions
 * and limitations under the License.
 */

module org.yeb.mvc.webutils;

import javax.servlet.http:HttpServletRequest, HttpServletResponse, Cookie, HttpSession;
import org.owasp.esapi:ESAPI,HTTPUtilitiess;

load org.yeb.std;

request c = (r is ~HttpServletRequest = c.req; r);
response c = (r is ~HttpServletResponse = c.res; r);
servletContext c = (r is ~ServletContext = c.sctxt; r);
locale c = (request c)#getLocale();



params min max ctx name = (
  ps = (request ctx)#getParameterValues(name);
  if defined? ps then
    map' string (wrapArray ps) |> (load org.yeb.validation).valiListLength min max;
  else
    []
  fi
);


param ctx name = (
    par = (request ctx)#getParameter(name);
    if defined? par then
        string par;
    else
        failWithValidation (message "noparam" "No request-parameter for name %1$s" [obj name]) "";
    fi;
);


maybeParam ctxt name vali =
    (par = (request ctxt)#getParameter(name);
    if defined? par then
        Some (vali (string par));
    else
        none
    fi);



isAjax ctxt = (request ctxt)#getHeader("X-Requested-With") == "XMLHttpRequest";


{
    request,response,servletContext,locale,
    session ctxt = ((request ctxt)#getSession(true)) is ~HttpSession,
    maybeSession ctxt = maybeDefined None Some ((request ctxt)#getSession(false) is ~HttpSession),

    params, param, maybeParam, isAjax,

    newCookie name value opts =
        (cookie = new Cookie(name is string,value is string);
         for opts do opt: case opt of
            Comment c: cookie#setComment(c is string);
            Domain d: cookie#setDomain(d is string);
            MaxAge n: cookie#setMaxAge(n is number);
            Path p: cookie#setPath(p is string);
            Secure s: cookie#setSecure(s is boolean);
            Version v: cookie#setVersion(v is number);
         esac done;
         cookie),


    addCookie cookie ctxt = ESAPI#httpUtilities()#addCookie(response ctxt, cookie),
    addHeader name value ctxt = ESAPI#httpUtilities()#addHeader(response ctxt, name is string, value is string),
    assertSecureChannel ctxt = ESAPI#httpUtilities()#assertSecureChannel(request ctxt),
    changeSessionIdentifier ctxt = ESAPI#httpUtilities()#changeSessionIdentifier(request ctxt),
    decryptHiddenField encrypted = string (ESAPI#httpUtilities()#decryptHiddenField(encrypted is string)),
    decryptQueryString encrypted =
        wrapMap string string ESAPI#httpUtilities()#decryptQueryString(encrypted),
    decryptStateFromCookie ctxt =
        wrapMap string string ESAPI#httpUtilities()#decryptStateFromCookie(request ctxt),
    encryptHiddenField value = string (ESAPI#httpUtilities()#encryptHiddenField(value is string)),
    encryptQueryString value = string (ESAPI#httpUtilities()#encryptQueryString(value is string)),
    encryptStateInCookie values ctxt =
        ESAPI#httpUtilities()#encryptStateInCookie(response ctxt, values is hash<string,string>),

    getCookie name ctxt = (
        str = ESAPI#httpUtilities()#getCookie(request ctxt,name);
        if defined? str then Some (string str) else none fi),

    getFileUploads destDir extensions ctxt =
        wrapList do fl: (fl unsafely_as ~java.io.File) done
                ESAPI#httpUtilities()#getFileUploads(request ctxt, new java.io.File(destDir is string), extensions is list<string>),
    
    getHeader name ctxt =
        (str = ESAPI#httpUtilities()#getHeader(request ctxt,name is string);
        if defined? str then Some (string str) else none fi),

    killAllCookies ctxt = ESAPI#httpUtilities()#killAllCookies(request ctxt,response ctxt),
    killCookie name ctxt = ESAPI#httpUtilities()#killCookie(request ctxt,response ctxt,name is string),
    setHeader name value ctxt = ESAPI#httpUtilities()#setHeader(response ctxt,name is string, value is string),
    setNoCacheHeaders ctxt = ESAPI#httpUtilities()#setNoCacheHeaders(response ctxt),

    encodeForBase64 bytes wrap = string ESAPI#encoder()#encodeForBase64(bytes is ~byte[],wrap is boolean),
    decodeFromBase64 str = ESAPI#encoder()#decodeFromBase64(str is string),
    encodeForCSS str = ESAPI#encoder()#encodeForCSS(str is string),
    encodeForHTML str = ESAPI#encoder()#encodeForHTML(str is string),
    encodeForHTMAttribute str = ESAPI#encoder()#encodeForHTMLAttribute(str is string),
    encodeForURL str = ESAPI#encoder()#encodeForURL(str is string),
    encodeForXML str = ESAPI#encoder()#encodeForXML(str is string),


}